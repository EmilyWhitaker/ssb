CR2wtemp$DateTime
strrep(CR2wtemp$DateTime, length(depth))
rep(CR2wtemp$DateTime, 3)
rep(CR2wtemp$DateTime, 3, by =1)
rep(CR2wtemp$DateTime, times =2)
rep(CR2wtemp$DateTime, each =2)
data.frame('Date' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
unique(CR2wtemp$DateTime))
,
'Temp')
data.frame('Date' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime)))
,
'Temp')
data.frame('Date' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df <- data.frame('Date' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy
# dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy = c()
head(CR2wtemp)
dummy_data <- CR2wtemp[,-1]
dummy_data
# dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy = c()
dummy_data <- CR2wtemp[,-1]
for (ii in 1:length(CR2wtemp$DateTime)){
dummy <- append(dummy, dummy_data[ii,])
}
model_df <- data.frame('Date' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- dummy
model_df
CR2wtemp[1,]
CR2wtemp[5,]
CR2wtemp["150",]
CR2wtemp["100",]
model_df
CRhypso <- read.delim('.../CR_lake_hypsometry.txt', sep = '\t')
CRhypso <- read.delim('../../CR_lake_hypsometry.txt', sep = '\t')
CRhypso <- read.delim('../CR_lake_hypsometry.txt', sep = '\t')
V <- 228504600 #volume of CR, ensure its cubic meters
V <- 3900000 #volume of CR, ensure its cubic meters
model_df = model_df %>% gather(DateTime,Temp, -Depth)
model_df <- data.frame('Date' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- dummy
model_df %>% gather(DateTime,Temp, -Depth)
model_df
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- dummy
model_df_long = model_df %>% gather(DateTime,Temp, -Depth)
model_df_long
str(model_df)
str(dummy)
as.double(dummy)
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- as.double(dummy)
str(model_df)
model_df_long = model_df %>% gather(DateTime,Temp, -Depth)
model_df_long
?gather
dens <- function(wtemp) {
density = 999.842594+6.793952e-2*wtemp-9.09529e-3*wtemp^2+1.001685e-4*wtemp^3-1.120083e-6*wtemp^4+6.536332e-9*wtemp^5
return(density)
}
wtempLong = model_df %>% mutate(Density = dens(Temp))
wtempLong
wtempLong
wtempLong
maxarea= 376358        #square meters
hypso = hypso %>% mutate(R = hp_factor*maxarea)
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(hypso, by = 'Depth')
# Add new row for $$ sum{(z_g - z) * A_z * (p_i - \rho_z)}$$
#ss.df = ss.df %>% mutate(s = (t) * As * (D))
t= as.double(zgg) - ss.df$Depth
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
t= as.double(zgg) - ss.df$Depth
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = ss.df %>% mutate(s = (t) * As * (D))
schmidtStability = ss.df %>% group_by(Date) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
schmidtStability = ss.df %>% group_by(DateTime) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(Date),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
depth= seq(1,25,1)
get_var(file = 'outputs/output-CR.nc', reference = 'surface',var_name = 'temp', z_out = seq(1,25,1))
CR2wtemp <- get_var(file = 'outputs/output-CR.nc', reference = 'surface',var_name = 'temp', z_out = depth)
head(CR2wtemp)
CRhypso <- read.delim('../CR_lake_hypsometry.txt', sep = '\t')
head(TRhypso)
CRhypso <- read.delim('../CR_lake_hypsometry.txt', sep = '\t')
head(TRhypso)
V <- 3900000 #volume of CR, ensure its cubic meters
# dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy = c()
dummy_data <- CR2wtemp[,-1]
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
for (ii in 1:length(CR2wtemp$DateTime)){
dummy <- append(dummy, dummy_data[ii,])
}
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 376358        #square meters
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
dens <- function(wtemp) {
density = 999.842594+6.793952e-2*wtemp-9.09529e-3*wtemp^2+1.001685e-4*wtemp^3-1.120083e-6*wtemp^4+6.536332e-9*wtemp^5
return(density)
}
model_df$Temp <- as.double(dummy)
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
t= as.double(zgg) - ss.df$Depth
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
pi = 1000
zgg= zg
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = ss.df %>% mutate(s = (t) * As * (D))
schmidtStability = ss.df %>% group_by(DateTime) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
CR2wtemp <- get_var(file = 'outputs/output-CR.nc', reference = 'surface',var_name = 'temp', z_out = depth)
head(CR2wtemp)
CRhypso <- read.delim('../CR_lake_hypsometry.txt', sep = '\t')
head(TRhypso)
head(CRhypso)
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 376358        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
CRhypso <- read.delim('../CR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
library(glmtools)
CRhypso <- read.delim('../CR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
library(glmtools)
library(GLM3r)
library(tidyverse)
#library(lubridate)
depth= seq(1,25,1)
get_var(file = 'outputs/output-CR.nc', reference = 'surface',var_name = 'temp', z_out = seq(1,25,1))
CR2wtemp <- get_var(file = 'outputs/output-CR.nc', reference = 'surface',var_name = 'temp', z_out = depth)
head(CR2wtemp)
CRhypso <- read.delim('../CR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
V <- 3900000
dummy = c()
dummy_data <- CR2wtemp[,-1]
for (ii in 1:length(CR2wtemp$DateTime)){
dummy <- append(dummy, dummy_data[ii,])
}
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- as.double(dummy)
model_df$Temp
dens <- function(wtemp) {
density = 999.842594+6.793952e-2*wtemp-9.09529e-3*wtemp^2+1.001685e-4*wtemp^3-1.120083e-6*wtemp^4+6.536332e-9*wtemp^5
return(density)
}
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 376358        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
t= as.double(zgg) - ss.df$Depth
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = ss.df %>% mutate(s = (t) * As * (D))
schmidtStability = ss.df %>% group_by(DateTime) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
depth= seq(1,35,1)
get_var(file = 'outputs/output-TR.nc', reference = 'surface',var_name = 'temp', z_out = seq(1,25,1))
CR2wtemp <- get_var(file = 'outputs/output-TR.nc', reference = 'surface',var_name = 'temp', z_out = depth)
head(CR2wtemp)
CRhypso <- read.delim('../TroutLake/TR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
CRhypso <- read.delim('TroutLake/TR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
V <- 228504600 #volume of CR, ensure its cubic meters
# dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy = c()
dummy_data <- CR2wtemp[,-1]
for (ii in 1:length(CR2wtemp$DateTime)){
dummy <- append(dummy, dummy_data[ii,])
}
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- as.double(dummy)
###model_df!!!!!!!!!!! its your thing!
#model_df_long = model_df %>% gather(DateTime,Temp, -Depth)
dens <- function(wtemp) {
density = 999.842594+6.793952e-2*wtemp-9.09529e-3*wtemp^2+1.001685e-4*wtemp^3-1.120083e-6*wtemp^4+6.536332e-9*wtemp^5
return(density)
}
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 15651000        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
# Add new row for $$ sum{(z_g - z) * A_z * (p_i - \rho_z)}$$
#ss.df = ss.df %>% mutate(s = (t) * As * (D))
t= as.double(zgg) - ss.df$Depth
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = ss.df %>% mutate(s = (t) * As * (D))
schmidtStability = ss.df %>% group_by(DateTime) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
depth= seq(1,35,1)
CR2wtemp <- get_var(file = 'outputs/TRoutreal.nc', reference = 'surface',var_name = 'temp', z_out = depth)
head(CR2wtemp)
CRhypso <- read.delim('TroutLake/TR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
V <- 228504600 #volume of CR, ensure its cubic meters
# dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy = c()
dummy_data <- CR2wtemp[,-1]
for (ii in 1:length(CR2wtemp$DateTime)){
dummy <- append(dummy, dummy_data[ii,])
}
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- as.double(dummy)
###model_df!!!!!!!!!!! its your thing!
#model_df_long = model_df %>% gather(DateTime,Temp, -Depth)
dens <- function(wtemp) {
density = 999.842594+6.793952e-2*wtemp-9.09529e-3*wtemp^2+1.001685e-4*wtemp^3-1.120083e-6*wtemp^4+6.536332e-9*wtemp^5
return(density)
}
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 15651000        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
# Add new row for $$ sum{(z_g - z) * A_z * (p_i - \rho_z)}$$
#ss.df = ss.df %>% mutate(s = (t) * As * (D))
t= as.double(zgg) - ss.df$Depth
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = ss.df %>% mutate(s = (t) * As * (D))
schmidtStability = ss.df %>% group_by(DateTime) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
depth= seq(1,25,1)
depth= seq(1,25,1)
CR2wtemp <- get_var(file = 'outputs/TRoutreal.nc', reference = 'surface',var_name = 'temp', z_out = depth)
head(CR2wtemp)
CRhypso <- read.delim('TroutLake/TR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
V <- 228504600 #volume of CR, ensure its cubic meters
# dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy = c()
dummy_data <- CR2wtemp[,-1]
for (ii in 1:length(CR2wtemp$DateTime)){
dummy <- append(dummy, dummy_data[ii,])
}
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- as.double(dummy)
###model_df!!!!!!!!!!! its your thing!
#model_df_long = model_df %>% gather(DateTime,Temp, -Depth)
dens <- function(wtemp) {
density = 999.842594+6.793952e-2*wtemp-9.09529e-3*wtemp^2+1.001685e-4*wtemp^3-1.120083e-6*wtemp^4+6.536332e-9*wtemp^5
return(density)
}
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 15651000        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
# Add new row for $$ sum{(z_g - z) * A_z * (p_i - \rho_z)}$$
#ss.df = ss.df %>% mutate(s = (t) * As * (D))
t= as.double(zgg) - ss.df$Depth
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = ss.df %>% mutate(s = (t) * As * (D))
schmidtStability = ss.df %>% group_by(DateTime) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
library(glmtools)
library(GLM3r)
library(tidyverse)
#library(lubridate)
depth= seq(1,25,1)
get_var(file = 'outputs/output-CR.nc', reference = 'surface',var_name = 'temp', z_out = seq(1,25,1))
CR2wtemp <- get_var(file = 'outputs/output-CR.nc', reference = 'surface',var_name = 'temp', z_out = depth)
head(CR2wtemp)
CRhypso <- read.delim('../CR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
V <- 3900000 #volume of CR, ensure its cubic meters
# dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy = c()
dummy_data <- CR2wtemp[,-1]
for (ii in 1:length(CR2wtemp$DateTime)){
dummy <- append(dummy, dummy_data[ii,])
}
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- as.double(dummy)
###model_df!!!!!!!!!!! its your thing!
#model_df_long = model_df %>% gather(DateTime,Temp, -Depth)
dens <- function(wtemp) {
density = 999.842594+6.793952e-2*wtemp-9.09529e-3*wtemp^2+1.001685e-4*wtemp^3-1.120083e-6*wtemp^4+6.536332e-9*wtemp^5
return(density)
}
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 376358        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
# Add new row for $$ sum{(z_g - z) * A_z * (p_i - \rho_z)}$$
#ss.df = ss.df %>% mutate(s = (t) * As * (D))
t= as.double(zgg) - ss.df$Depth
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = ss.df %>% mutate(s = (t) * As * (D))
schmidtStability = ss.df %>% group_by(DateTime) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Crystal Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
library(glmtools)
library(GLM3r)
library(tidyverse)
depth= seq(1,32,1)
CR2wtemp <- get_var(file = 'outputs/TRoutreal.nc', reference = 'surface',var_name = 'temp', z_out = depth)
head(CR2wtemp)
CRhypso <- read.delim('TroutLake/TR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
V <- 228504600 #volume of CR, ensure its cubic meters
# dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy = c()
dummy_data <- CR2wtemp[,-1]
for (ii in 1:length(CR2wtemp$DateTime)){
dummy <- append(dummy, dummy_data[ii,])
}
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- as.double(dummy)
###model_df!!!!!!!!!!! its your thing!
#model_df_long = model_df %>% gather(DateTime,Temp, -Depth)
dens <- function(wtemp) {
density = 999.842594+6.793952e-2*wtemp-9.09529e-3*wtemp^2+1.001685e-4*wtemp^3-1.120083e-6*wtemp^4+6.536332e-9*wtemp^5
return(density)
}
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 15651000        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
# Add new row for $$ sum{(z_g - z) * A_z * (p_i - \rho_z)}$$
#ss.df = ss.df %>% mutate(s = (t) * As * (D))
t= as.double(zgg) - ss.df$Depth
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = ss.df %>% mutate(s = (t) * As * (D))
schmidtStability = ss.df %>% group_by(DateTime) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Trout Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
CR2wtemp
CR2wtemp <- get_var(file = 'outputs/TRoutreal.nc', reference = 'surface',var_name = 'temp', z_out = depth)
CR2wtemp <- get_var(file = 'outputs/TRoutreal.nc', reference = 'surface',var_name = 'temp', z_out = depth)
CR2wtemp <- get_var(file = 'outputs/TRoutreal', reference = 'surface',var_name = 'temp', z_out = depth)
head(CR2wtemp)
CRhypso <- read.delim('TroutLake/TR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
V <- 228504600 #volume of CR, ensure its cubic meters
# dummy = matrix(NA, nrow = length(rep(CR2wtemp$DateTime, each = length(depth))), ncol = 1)
dummy = c()
dummy_data <- CR2wtemp[,-1]
for (ii in 1:length(CR2wtemp$DateTime)){
dummy <- append(dummy, dummy_data[ii,])
}
model_df <- data.frame('DateTime' = rep(CR2wtemp$DateTime, each = length(depth)), "Depth" = rep(depth, times =
length(unique(CR2wtemp$DateTime))))
model_df$Temp <- as.double(dummy)
dens <- function(wtemp) {
density = 999.842594+6.793952e-2*wtemp-9.09529e-3*wtemp^2+1.001685e-4*wtemp^3-1.120083e-6*wtemp^4+6.536332e-9*wtemp^5
return(density)
}
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 15651000        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
library(glmtools)
library(GLM3r)
library(tidyverse)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
CRhypso$Depth
CRhypso
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
CRhypso
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
zg =CRhypso$R %*% CRhypso$depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 15651000        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
ss.df = wtempLong %>% left_join(CRhypso, by = 'depth')
wtempLong
CRhypso <- read.delim('TroutLake/TR_lake_hypsometry.txt', sep = '\t')
head(CRhypso)
wtempLong = model_df %>% mutate(Density = dens(Temp))
maxarea= 15651000        #square meters
CRhypso = CRhypso %>% mutate(R = hp_factor*maxarea)
zg =CRhypso$R %*% CRhypso$Depth / sum(CRhypso$R)
zgg= zg
pi = 1000
ss.df = wtempLong %>% left_join(CRhypso, by = 'Depth')
# Add new row for $$ sum{(z_g - z) * A_z * (p_i - \rho_z)}$$
#ss.df = ss.df %>% mutate(s = (t) * As * (D))
t= as.double(zgg) - ss.df$Depth
As= ss.df$R
D= 1000 - ss.df$Density
ss.df = ss.df %>% mutate(s = (t) * As * (D))
schmidtStability = ss.df %>% group_by(DateTime) %>%
summarise(s = sum(s,na.rm = T)) %>%
mutate(schmidtStability =  9.81/As[2] * s)
Cr = ggplot(schmidtStability) + geom_path(aes(x= as.Date(DateTime),y=schmidtStability))
Cr + labs(title = "Trout Lake Schmidt Stability",
x = "Year",
y = "Schmidt Stability (J/m^2)") +
theme_bw()
